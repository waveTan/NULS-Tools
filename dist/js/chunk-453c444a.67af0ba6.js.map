{"version":3,"sources":["webpack:///./src/api/contractCall.js","webpack:///./src/views/game/goblin/Goblin.vue?26c7","webpack:///./src/components/PasswordBar.vue?9f1b","webpack:///./src/views/game/goblin/Goblin.vue?7493","webpack:///./src/components/CountDown.vue?2645","webpack:///src/components/CountDown.vue","webpack:///./src/components/CountDown.vue?b625","webpack:///./src/components/CountDown.vue","webpack:///src/views/game/goblin/Goblin.vue","webpack:///./src/views/game/goblin/Goblin.vue?2d59","webpack:///./src/views/game/goblin/Goblin.vue","webpack:///./src/components/PasswordBar.vue?c953","webpack:///src/components/PasswordBar.vue","webpack:///./src/components/PasswordBar.vue?fdc6","webpack:///./src/components/PasswordBar.vue","webpack:///./node_modules/nuls-sdk-js/lib/utils/utils.js"],"names":["methodCall","contractAddress","methodName","methodDesc","args","post","then","response","hasOwnProperty","success","data","result","catch","error","chainMethodCall","address","methodsInfo","values","validateContractCall","Number","Times","sdk","CONTRACT_MAX_GASLIMIT","CONTRACT_MINIMUM_PRICE","name","desc","resData","sender","value","gasLimit","price","console","log","imputedContractCallGas","msg","getContractMethodArgsTypes","contractConstructorArgsTypes","newArgs","utils","twoDimensionalArray","contractCallData","chainId","chainInfo","render","_vm","this","_h","$createElement","_c","_self","directives","rawName","expression","staticClass","attrs","_v","countDownValue","staticStyle","addressList","getSummaries","scopedSlots","_u","key","fn","scope","row","balance","on","$event","guiji","props","_l","item","index","_s","tokenId","createTime","level","slot","levelInfo","status","place","goblinBlack","upgrade","sent","acquire","acquireAndBacks","guiDialog","ref","guijiForm","guijiRules","model","callback","$$v","$set","changeAssets","tokenName","balances","labels","startCollection","typeDialog","openTypeDialog","typeRadio","isClick","_caveName","typeSubmit","passSubmit","staticRenderFns","secondString","component","$t","passwordVisible","width","passwordShow","passwordClose","passwordForm","passwordRules","nativeOn","preventDefault","type","indexOf","_k","keyCode","enterSubmit","keepRadio","_e","isDisabled","dialogSubmit","disabledInfo","password","valueOfstring","obj","toString","isBlank","str","trim","length","module","exports","stringToByte","bytes","len","c","i","charCodeAt","push","types","two","Array","arg","argStr","arrayArg","eval","isArray","k","_len","_result"],"mappings":"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ACF,KAAR,EACU,EAAV,eACU,MACF,KAAR,EACU,EAAV,gBACU,MACF,KAAR,EACU,EAAV,gBACU,MACF,KAAR,EACU,EAAV,gBACU,MACF,KAAR,EACU,EAAV,gBACU,MACF,KAAR,GACU,EAAV,6BACU,MACF,KAAR,GACU,EAAV,6BACU,MACF,KAAR,GACU,EAAV,6BACU,MACF,KAAR,GACU,EAAV,6BACU,MACF,KAAR,GACU,EAAV,6BACU,MACF,KAAR,GACU,EAAV,6BACU,MACF,KAAR,GACU,EAAV,6BACU,MACF,KAAR,GACU,EAAV,6BACU,MACF,KAAR,GACU,EAAV,6BACU,MACF,KAAR,GACU,EAAV,cACU,MACF,KAAR,GACU,EAAV,4BACU,MACF,KAAR,GACU,EAAV,4BACU,MACF,KAAR,GACU,EAAV,4BACU,MACF,KAAR,GACU,EAAV,4BACU,MACF,KAAR,GACU,EAAV,4BACU,MACF,KAAR,GACU,EAAV,4BACU,MACF,KAAR,GACU,EAAV,4BACU,MACF,KAAR,GACU,EAAV,4BACU,MACF,KAAR,GACU,EAAV,4BACU,MACF,KAAR,GACU,EAAV,cACU,MACF,KAAR,GACU,EAAV,2BACU,MACF,KAAR,GACU,EAAV,2BACU,MACF,KAAR,GACU,EAAV,2BACU,MACF,KAAR,GACU,EAAV,2BACU,MACF,KAAR,GACU,EAAV,2BACU,MACF,KAAR,GACU,EAAV,2BACU,MACF,KAAR,GACU,EAAV,2BACU,MACF,KAAR,GACU,EAAV,2BACU,MACF,KAAR,GACU,EAAV,2BACU,MACF,KAAR,GACU,EAAV,aACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR,GACU,EAAV,yBACU,MACF,KAAR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","file":"js/chunk-453c444a.67af0ba6.js","sourcesContent":["import sdk from 'nuls-sdk-js/lib/api/sdk'\r\nimport utils from 'nuls-sdk-js/lib/utils/utils'\r\nimport {chainInfo} from '@/config.js'\r\nimport {Times} from '@/api/util'\r\nimport {post} from './https'\r\n\r\n/**\r\n * 不上链方法调用\r\n * @param contractAddress\r\n * @param methodName\r\n * @param methodDesc\r\n * @param args\r\n */\r\nexport async function methodCall(contractAddress, methodName, methodDesc, args) {\r\n  //console.log(contractAddress, methodName, methodDesc, args);\r\n  return await post('/', 'invokeView', [contractAddress, methodName, methodDesc, args])\r\n    .then((response) => {\r\n      //console.log(response);\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        return {success: true, data: response.result}\r\n      } else {\r\n        return {success: false, data: response}\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error}\r\n    });\r\n}\r\n\r\n/**\r\n * 上链方法调用\r\n */\r\nexport async function chainMethodCall(address, methodsInfo, contractAddress, values, args) {\r\n  let resData = await validateContractCall(address, Number(Times(values, 100000000)), sdk.CONTRACT_MAX_GASLIMIT, sdk.CONTRACT_MINIMUM_PRICE, contractAddress, methodsInfo.name, methodsInfo.desc, args);\r\n  if (resData.success) {\r\n    return {success: true, data: resData.data};\r\n  } else {\r\n    return {success: false, data: resData.data};\r\n  }\r\n}\r\n\r\n/**\r\n * 验证调用合约交易\r\n * @param sender\r\n * @param value\r\n * @param gasLimit\r\n * @param price\r\n * @param contractAddress\r\n * @param methodName\r\n * @param methodDesc\r\n * @param args\r\n */\r\nasync function validateContractCall(sender, value, gasLimit, price, contractAddress, methodName, methodDesc, args) {\r\n  console.log(sender, value, gasLimit, price, contractAddress, methodName, methodDesc, args);\r\n  return await post('/', 'validateContractCall', [sender, value, gasLimit, price, contractAddress, methodName, methodDesc, args])\r\n    .then(async (response) => {\r\n      //console.log(response);\r\n      if (response.result.success) {\r\n        //return {success: true, data: response.result};\r\n        let resData = await imputedContractCallGas(sender, value, contractAddress, methodName, methodDesc, args);\r\n        if (resData.success) {\r\n          return {success: true, data: resData.data};\r\n        } else {\r\n          return {success: false, data: resData.data};\r\n        }\r\n      } else {\r\n        return {success: false, data: response.result.msg};\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n/**\r\n * 预估调用合约交易的gas\r\n * @param sender\r\n * @param value\r\n * @param contractAddress\r\n * @param methodName\r\n * @param methodDesc\r\n * @param args\r\n */\r\nasync function imputedContractCallGas(sender, value, contractAddress, methodName, methodDesc, args) {\r\n  return await post('/', 'imputedContractCallGas', [sender, value, contractAddress, methodName, methodDesc, args])\r\n    .then(async (response) => {\r\n      //console.log(response);\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        let contractConstructorArgsTypes = await getContractMethodArgsTypes(contractAddress, methodName, methodDesc);\r\n        if (!contractConstructorArgsTypes.success) {\r\n          return {success: false, data: contractConstructorArgsTypes.data};\r\n        }\r\n        let newArgs = utils.twoDimensionalArray(args, contractConstructorArgsTypes.data);\r\n        let contractCallData = {\r\n          chainId: chainInfo.chainId,\r\n          sender: sender,\r\n          contractAddress: contractAddress,\r\n          value: value,\r\n          gasLimit: response.result.gasLimit,\r\n          price: 25,\r\n          methodName: methodName,\r\n          methodDesc: methodDesc,\r\n          args: newArgs\r\n        };\r\n        return {success: true, data: contractCallData};\r\n      } else {\r\n        return {success: false, data: response.data};\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n/**\r\n * 获取合约指定函数的参数类型\r\n * @param contractAddress\r\n * @param  methodName\r\n * @param  methodDesc\r\n */\r\nasync function getContractMethodArgsTypes(contractAddress, methodName, methodDesc) {\r\n  return await post('/', 'getContractMethodArgsTypes', [contractAddress, methodName, methodDesc])\r\n    .then((response) => {\r\n      //console.log(response);\r\n      if (response.hasOwnProperty(\"result\")) {\r\n        return {success: true, data: response.result};\r\n      } else {\r\n        return {success: false, data: response.error};\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return {success: false, data: error};\r\n    });\r\n}\r\n\r\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Goblin.vue?vue&type=style&index=0&lang=less&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PasswordBar.vue?vue&type=style&index=0&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.goblinLoading),expression:\"goblinLoading\"}],staticClass:\"goblin w1200\",attrs:{\"element-loading-text\":\"尊敬的狂霸！正在为您查询矿信息...\",\"element-loading-spinner\":\"el-icon-loading\",\"element-loading-background\":\"rgba(0, 0, 0, 0.8)\"}},[_c('div',{staticClass:\"tc title\"},[_vm._v(\"\\n    Goblin 助手\\n    \"),(_vm.countDownValue !==0)?_c('div',{staticClass:\"font12 fr\",staticStyle:{\"margin\":\"20px 0 0 0\"}},[_vm._v(\"\\n      数据\\n      \"),_c('CountDown',{attrs:{\"remainTime\":_vm.countDownValue}}),_vm._v(\"\\n      秒后刷新\\n    \")],1):_c('div',{staticClass:\"font12 fr\",staticStyle:{\"margin\":\"20px 0 0 0\"}},[_vm._v(\"数据异步加载中（可继续操作）...\")])]),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.addressList,\"summary-method\":_vm.getSummaries,\"show-summary\":\"\",\"row-key\":\"address\"}},[_c('el-table-column',{attrs:{\"label\":\"地址\",\"prop\":\"addresss\",\"align\":\"center\",\"width\":\"150\"}}),_c('el-table-column',{attrs:{\"label\":\"备注\",\"prop\":\"note\",\"align\":\"center\",\"width\":\"80\"}}),_c('el-table-column',{attrs:{\"label\":\"NULS\",\"prop\":\"balance\",\"align\":\"center\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"label\":\"goblin\",\"prop\":\"goblinBalance\",\"align\":\"center\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"label\":\"blackiron\",\"prop\":\"blackBalance\",\"align\":\"center\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"label\":\"tungsten\",\"prop\":\"tungstenBalance\",\"align\":\"center\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"label\":\"platinum\",\"prop\":\"platinumBalance\",\"align\":\"center\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"label\":\"obsidian\",\"prop\":\"obsidianBalance\",\"align\":\"center\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"label\":\"cobalt\",\"prop\":\"cobaltBalance\",\"align\":\"center\",\"width\":\"100\"}}),_c('el-table-column',{attrs:{\"label\":\"军团\",\"prop\":\"myLegions\",\"align\":\"center\",\"width\":\"50\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\",\"min-width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(scope.row.balance !=='' )?_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.guiji(scope.row)}}},[_vm._v(\"归集\\n        \")]):_c('i',{staticClass:\"el-icon-loading\"})]}}])}),_c('el-table-column',{attrs:{\"type\":\"expand\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('div',{staticClass:\"lis\"},[_c('ul',{staticClass:\"titles\"},[_c('li',{staticClass:\"fl\"},[_vm._v(\"名称\")]),_c('li',{staticClass:\"fl\"},[_vm._v(\"ID\")]),_c('li',{staticClass:\"fl\"},[_vm._v(\"创建时间\")]),_c('li',{staticClass:\"fl\",staticStyle:{\"width\":\"9rem\"}},[_vm._v(\"等级\")]),_c('li',{staticClass:\"fl\"},[_vm._v(\"状态\")]),_c('li',{staticClass:\"fl\"},[_vm._v(\"矿场\")]),_c('li',{staticClass:\"fl w100\"},[_vm._v(\"待收获\")]),_c('li',{staticClass:\"fl w200\"},[_vm._v(\"操作\")])]),_vm._l((props.row.legionsData),function(item,index){return _c('ul',{key:index,staticClass:\"cb\"},[_c('li',{staticClass:\"fl\"},[_vm._v(_vm._s(item.name))]),_c('li',{staticClass:\"fl\"},[_vm._v(_vm._s(item.tokenId))]),_c('li',{staticClass:\"fl\"},[_vm._v(_vm._s(item.createTime))]),_c('li',{staticClass:\"fl\",staticStyle:{\"width\":\"9rem\"}},[_vm._v(\"\\n              \"+_vm._s(item.level)+\"\\n              \"),_c('el-tooltip',{attrs:{\"placement\":\"right\",\"effect\":\"light\"}},[_c('div',{attrs:{\"slot\":\"content\"},slot:\"content\"},[_vm._v(_vm._s(item.levelInfo))]),_c('span',[_c('i',{staticClass:\"el-icon-question\"})])])],1),_c('li',{staticClass:\"fl\"},[_vm._v(_vm._s(item.status === 'mining' ? '挖矿':'空闲'))]),_c('li',{staticClass:\"fl\"},[_vm._v(_vm._s(item.place ==='def' ? '':item.place))]),_c('li',{staticClass:\"fl w100\"},[_vm._v(_vm._s(item.goblinBlack))]),_c('li',{staticClass:\"fl w200\",staticStyle:{\"text-align\":\"right\"}},[_c('el-button',{attrs:{\"type\":\"text\",\"disabled\":item.status === 'mining'},on:{\"click\":function($event){return _vm.upgrade(item)}}},[_vm._v(\"升级\\n              \")]),_c('el-button',{attrs:{\"type\":\"text\",\"disabled\":item.status === 'mining'},on:{\"click\":function($event){return _vm.sent(item)}}},[_vm._v(\"派出\\n              \")]),_c('el-button',{attrs:{\"type\":\"text\",\"disabled\":item.status !== 'mining'},on:{\"click\":function($event){return _vm.acquire(item)}}},[_vm._v(\"获取\\n              \")]),_c('el-button',{attrs:{\"type\":\"text\",\"disabled\":item.status !== 'mining'},on:{\"click\":function($event){return _vm.acquireAndBacks(item)}}},[_vm._v(\"\\n                获取并迁回\\n              \")])],1)])})],2)]}}])})],1),_c('el-dialog',{staticClass:\"guiji-dialog\",attrs:{\"title\":\"归集\",\"visible\":_vm.guiDialog},on:{\"update:visible\":function($event){_vm.guiDialog=$event}}},[_c('el-form',{ref:\"guijiForm\",attrs:{\"model\":_vm.guijiForm,\"rules\":_vm.guijiRules}},[_c('el-form-item',{attrs:{\"label\":\"from地址\"}},[_c('el-input',{attrs:{\"disabled\":\"disabled\",\"autocomplete\":\"off\"},model:{value:(_vm.guijiForm.fromAddress),callback:function ($$v) {_vm.$set(_vm.guijiForm, \"fromAddress\", $$v)},expression:\"guijiForm.fromAddress\"}})],1),_c('el-form-item',{attrs:{\"label\":\"资产\",\"prop\":\"assets\"}},[_c('el-select',{attrs:{\"placeholder\":\"\"},on:{\"change\":_vm.changeAssets},model:{value:(_vm.guijiForm.assets),callback:function ($$v) {_vm.$set(_vm.guijiForm, \"assets\", $$v)},expression:\"guijiForm.assets\"}},_vm._l((_vm.assetsList),function(item){return _c('el-option',{key:item.key,attrs:{\"label\":item.tokenName +'('+item.balances +')',\"value\":item.tokenName}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"金额\",\"prop\":\"amount\"}},[_c('el-input',{model:{value:(_vm.guijiForm.amount),callback:function ($$v) {_vm.$set(_vm.guijiForm, \"amount\", $$v)},expression:\"guijiForm.amount\"}})],1),_c('el-form-item',{attrs:{\"label\":\"to地址\",\"prop\":\"toAddress\"}},[_c('el-select',{attrs:{\"placeholder\":\"\"},model:{value:(_vm.guijiForm.toAddress),callback:function ($$v) {_vm.$set(_vm.guijiForm, \"toAddress\", $$v)},expression:\"guijiForm.toAddress\"}},_vm._l((_vm.addressList),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item.labels,\"value\":item.address}})}),1)],1)],1),_c('div',{staticClass:\"dialog-footer tc\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":function($event){return _vm.startCollection('guijiForm')}}},[_vm._v(\"开始归集\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"选择挖矿类型\",\"visible\":_vm.typeDialog,\"width\":\"70%\"},on:{\"update:visible\":function($event){_vm.typeDialog=$event},\"open\":_vm.openTypeDialog}},[_c('div',{staticClass:\"tc\"},[_c('el-radio-group',{model:{value:(_vm.typeRadio),callback:function ($$v) {_vm.typeRadio=$$v},expression:\"typeRadio\"}},_vm._l((_vm.mineData),function(item,index){return _c('el-radio',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.isClick && item._caveName !=='Titanium'),expression:\"item.isClick && item._caveName !=='Titanium'\"}],key:index,attrs:{\"label\":item._caveName}},[_vm._v(\"\\n          \"+_vm._s(item._caveName)+\"\\n          \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(item._caveStatus),expression:\"item._caveStatus\"}],staticClass:\"fCN\"},[_vm._v(\"(New)\")])])}),1)],1),_c('div',{staticClass:\"dialog-footer tc\",staticStyle:{\"margin\":\"20px 0 0 0\"},attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.typeSubmit}},[_vm._v(\"确 定\")])],1)]),_c('Password',{ref:\"password\",on:{\"passwordSubmit\":_vm.passSubmit}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',[_vm._v(_vm._s(_vm.secondString))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <!-- <span>{{hour? hourString+':'+minuteString+':'+secondString : minuteString+':'+secondString}}</span>-->\r\n    <span>{{secondString}}</span>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                hour: '',\r\n                minute: '',\r\n                second: '',\r\n                promiseTimer: ''\r\n            }\r\n        },\r\n        props: {\r\n            remainTime: {    // 倒计时间总秒数\r\n                default: ''\r\n            }\r\n        },\r\n        mounted() {\r\n            if (this.remainTime > 0) {\r\n                this.hour = Math.floor((this.remainTime / 3600) % 24)\r\n                this.minute = Math.floor((this.remainTime / 60) % 60)\r\n                this.second = Math.floor(this.remainTime % 60)\r\n                this.countDowm()\r\n            }\r\n        },\r\n        methods: {\r\n            countDowm() {\r\n                let self = this\r\n                clearInterval(this.promiseTimer)\r\n                this.promiseTimer = setInterval(function () {\r\n                    if (self.hour === 0) {\r\n                        if (self.minute !== 0 && self.second === 0) {\r\n                            self.second = 59\r\n                            self.minute -= 1\r\n                        } else if (self.minute === 0 && self.second === 0) {\r\n                            self.second = 0\r\n                            self.$emit('countDowmEnd', true)\r\n                            clearInterval(self.promiseTimer)\r\n                        } else {\r\n                            self.second -= 1\r\n                        }\r\n                    } else {\r\n                        if (self.minute !== 0 && self.second === 0) {\r\n                            self.second = 59\r\n                            self.minute -= 1\r\n                        } else if (self.minute === 0 && self.second === 0) {\r\n                            self.hour -= 1\r\n                            self.minute = 59\r\n                            self.second = 59\r\n                        } else {\r\n                            self.second -= 1\r\n                        }\r\n                    }\r\n                }, 1000)\r\n            },\r\n            formatNum(num) {\r\n                return num < 10 ? '0' + num : '' + num\r\n            }\r\n        },\r\n        computed: {\r\n            hourString() {\r\n                return this.formatNum(this.hour)\r\n            },\r\n            minuteString() {\r\n                return this.formatNum(this.minute)\r\n            },\r\n            secondString() {\r\n                return this.formatNum(this.second)\r\n            }\r\n        }\r\n    }\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CountDown.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CountDown.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CountDown.vue?vue&type=template&id=9737a632&\"\nimport script from \"./CountDown.vue?vue&type=script&lang=js&\"\nexport * from \"./CountDown.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"goblin w1200\" v-loading=\"goblinLoading\" element-loading-text=\"尊敬的狂霸！正在为您查询矿信息...\"\r\n       element-loading-spinner=\"el-icon-loading\"\r\n       element-loading-background=\"rgba(0, 0, 0, 0.8)\">\r\n    <div class=\"tc title\">\r\n      Goblin 助手\r\n      <div class=\"font12 fr\" style=\"margin: 20px 0 0 0\" v-if=\"countDownValue !==0\">\r\n        数据\r\n        <CountDown :remainTime=\"countDownValue\">\r\n        </CountDown>\r\n        秒后刷新\r\n      </div>\r\n      <div v-else class=\"font12 fr\" style=\"margin: 20px 0 0 0\">数据异步加载中（可继续操作）...</div>\r\n    </div>\r\n\r\n    <el-table :data=\"addressList\" :summary-method=\"getSummaries\" show-summary row-key=\"address\" style=\"width: 100%\">\r\n      <el-table-column label=\"地址\" prop=\"addresss\" align=\"center\" width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column label=\"备注\" prop=\"note\" align=\"center\" width=\"80\">\r\n      </el-table-column>\r\n      <el-table-column label=\"NULS\" prop=\"balance\" align=\"center\" width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column label=\"goblin\" prop=\"goblinBalance\" align=\"center\" width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column label=\"blackiron\" prop=\"blackBalance\" align=\"center\" width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column label=\"tungsten\" prop=\"tungstenBalance\" align=\"center\" width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column label=\"platinum\" prop=\"platinumBalance\" align=\"center\" width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column label=\"obsidian\" prop=\"obsidianBalance\" align=\"center\" width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column label=\"cobalt\" prop=\"cobaltBalance\" align=\"center\" width=\"100\">\r\n      </el-table-column>\r\n      <el-table-column label=\"军团\" prop=\"myLegions\" align=\"center\" width=\"50\">\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" align=\"center\" min-width=\"100\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button v-if=\"scope.row.balance !=='' \" @click=\"guiji(scope.row)\" type=\"text\" size=\"small\">归集\r\n          </el-button>\r\n          <i v-else class=\"el-icon-loading\"></i>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column type=\"expand\" align=\"center\">\r\n        <template slot-scope=\"props\">\r\n          <div class=\"lis\">\r\n            <ul class=\"titles\">\r\n              <li class=\"fl\">名称</li>\r\n              <li class=\"fl\">ID</li>\r\n              <li class=\"fl\">创建时间</li>\r\n              <li class=\"fl\" style=\"width: 9rem;\">等级</li>\r\n              <li class=\"fl\">状态</li>\r\n              <li class=\"fl\">矿场</li>\r\n              <li class=\"fl w100\">待收获</li>\r\n              <li class=\"fl w200\">操作</li>\r\n            </ul>\r\n\r\n            <ul v-for=\"(item,index) of props.row.legionsData\" :key=\"index\" class=\"cb\">\r\n              <li class=\"fl\">{{item.name}}</li>\r\n              <li class=\"fl\">{{item.tokenId}}</li>\r\n              <li class=\"fl\">{{item.createTime}}</li>\r\n              <li class=\"fl\" style=\"width: 9rem\">\r\n                {{item.level}}\r\n                <el-tooltip placement=\"right\" effect=\"light\">\r\n                  <div slot=\"content\">{{item.levelInfo}}</div>\r\n                  <span><i class=\"el-icon-question\"></i></span>\r\n                </el-tooltip>\r\n              </li>\r\n              <li class=\"fl\">{{item.status === 'mining' ? '挖矿':'空闲'}}</li>\r\n              <li class=\"fl\">{{item.place ==='def' ? '':item.place}}</li>\r\n              <li class=\"fl w100\">{{item.goblinBlack}}</li>\r\n              <li class=\"fl w200\" style=\"text-align: right\">\r\n                <el-button type=\"text\" :disabled=\"item.status === 'mining'\" @click=\"upgrade(item)\">升级\r\n                </el-button>\r\n                <el-button type=\"text\" :disabled=\"item.status === 'mining'\" @click=\"sent(item)\">派出\r\n                </el-button>\r\n                <el-button type=\"text\" :disabled=\"item.status !== 'mining'\" @click=\"acquire(item)\">获取\r\n                </el-button>\r\n                <!--<el-button type=\"text\" :disabled=\"item.status !== 'mining'\" @click=\"backs(item)\"\r\n                           v-if=\"item.mark ==='1'\">迁回\r\n                </el-button>-->\r\n                <el-button type=\"text\" :disabled=\"item.status !== 'mining'\"\r\n                           @click=\"acquireAndBacks(item)\">\r\n                  获取并迁回\r\n                </el-button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog title=\"归集\" :visible.sync=\"guiDialog\" class=\"guiji-dialog\">\r\n      <el-form :model=\"guijiForm\" :rules=\"guijiRules\" ref=\"guijiForm\">\r\n        <el-form-item label=\"from地址\">\r\n          <el-input v-model=\"guijiForm.fromAddress\" disabled=\"disabled\" autocomplete=\"off\">\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"资产\" prop=\"assets\">\r\n          <el-select v-model=\"guijiForm.assets\" placeholder=\"\" @change=\"changeAssets\">\r\n            <el-option v-for=\"item in assetsList\" :key=\"item.key\"\r\n                       :label=\"item.tokenName +'('+item.balances +')'\"\r\n                       :value=\"item.tokenName\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"金额\" prop=\"amount\">\r\n          <el-input v-model=\"guijiForm.amount\">\r\n            <!-- <template slot=\"append\">全部</template>-->\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"to地址\" prop=\"toAddress\">\r\n          <el-select v-model=\"guijiForm.toAddress\" placeholder=\"\">\r\n            <el-option v-for=\"(item,index) in addressList\" :key=\"index\"\r\n                       :label=\"item.labels\"\r\n                       :value=\"item.address\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer tc\">\r\n        <el-button type=\"success\" @click=\"startCollection('guijiForm')\">开始归集</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"选择挖矿类型\" :visible.sync=\"typeDialog\" width=\"70%\" @open=\"openTypeDialog\">\r\n      <div class=\"tc\">\r\n        <el-radio-group v-model=\"typeRadio\">\r\n          <el-radio v-for=\"(item,index) in mineData\" :key=\"index\" :label=\"item._caveName\"\r\n                    v-show=\"item.isClick && item._caveName !=='Titanium'\">\r\n            {{item._caveName}}\r\n            <span v-show=\"item._caveStatus\" class=\"fCN\">(New)</span>\r\n          </el-radio>\r\n        </el-radio-group>\r\n      </div>\r\n      <div slot=\"footer\" class=\"dialog-footer tc\" style=\"margin: 20px 0 0 0\">\r\n        <el-button type=\"success\" @click=\"typeSubmit\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <Password ref=\"password\" @passwordSubmit=\"passSubmit\">\r\n    </Password>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import nuls from 'nuls-sdk-js'\r\n  import sdk from 'nuls-sdk-js/lib/api/sdk'\r\n  import utils from 'nuls-sdk-js/lib/utils/utils'\r\n  import moment from 'moment'\r\n  import Password from '@/components/PasswordBar'\r\n  import CountDown from '@/components/CountDown'\r\n  import {chainInfo} from '@/config.js'\r\n  import {\r\n    divisionDecimals, timesDecimals,\r\n    accountList,\r\n    superLong,\r\n    getArgs,\r\n    Times,\r\n    Plus,\r\n    tofix,\r\n    getLocalTime\r\n  } from '@/api/util'\r\n  import {\r\n    countFee, inputsOrOutputs, validateAndBroadcast, passwordVerification, getBalanceOrNonceByAddress,\r\n    //validateTx\r\n  } from '@/api/requestData'\r\n  import {methodCall} from '@/api/contractCall'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        addressList: [],//地址列表\r\n\r\n        goblinAddress: 'NULSd6HgwJmD4SC1NAJXu8tC6NKsWs99P2jpw',//Goblin 合约地址\r\n        goblinInfo: {},//Goblin 合约详情\r\n\r\n        corpsAddress: 'NULSd6Hgkfuo4hKAN5ysFRVP8gynyYD5uRGGE',// 兵团合约地址(corps Contract)\r\n        corpsInfo: {},//兵团合约详情\r\n\r\n        NFTSendAddress: 'NULSd6HgoncSA11HYE1nQ2VLVu64XWfGHcsw6', // NFT Send合约地址\r\n        NFTSendInfo: {},//NFT Send 合约详情\r\n\r\n        NFTLevelUpAddress: 'NULSd6HgvnLGUGJ3JwMUmKJVDZbE4JjJeMbeQ', // NFT升级合约地址\r\n        NFTLevelUpInfo: {},//NFT升级合约详情\r\n\r\n        gainAddress: 'NULSd6HguK98JD4yFfjYkDTq8VXfPYDNeFMiL',//获取合约地址\r\n        gainInfo: {},//获取合约详情\r\n\r\n        newGainAddress: 'NULSd6HgmbboAkdDvnjHCkKgP8vt46WEcvpc3',//获取合约地址(新)\r\n        newGainInfo: {},//获取合约详情(新)\r\n\r\n        blackIronAddress: 'NULSd6HgnScefpS1jGFvJZeNPnFRtAebwVpJr',//黑铁矿合约地址\r\n        blackIronInfo: {},//黑铁矿合约详情\r\n\r\n        tungstenAddress: 'NULSd6HgngWZE3u8WRe4QxCVcUiyGtDP7cGEU', //钨矿合约地址\r\n        tungstenInfo: {},//钨矿合约详情\r\n\r\n        platinumAddress: 'NULSd6Hgocjz53UsmRkGJuQiXz993S3vosu81',//铂金矿合约地址\r\n        platinumInfo: {},//铂金矿合约详情\r\n\r\n        obsidanAddress: 'NULSd6Hgyb8Tfy9vQcf1Z4QGqdRFkzfYR1M5o',//黑耀矿合约地址\r\n        obsidanInfo: {},//黑耀矿合约详情\r\n\r\n        cobaltAddress: 'NULSd6HgkFgtEhbvtFo7pUVRbD5GdHNGkgFUj',//钴矿合约地址\r\n        cobaltInfo: {},//钴矿合约详情\r\n\r\n        contractCallData: {},//调用合约data\r\n\r\n        balanceInfo: {},//余额信息\r\n\r\n        guiDialog: false,//归集弹框\r\n        assetsList: [],//归集资产列表\r\n        guijiForm: {\r\n          fromAddress: '',\r\n          assets: '',\r\n          amount: '',\r\n          toAddress: ''\r\n        },\r\n        guijiRules: {\r\n          assets: [\r\n            {required: true, message: '请选择归集资产', trigger: 'change'}\r\n          ],\r\n          amount: [\r\n            {required: true, message: '请输入归集金额', trigger: 'blur'},\r\n          ],\r\n          toAddress: [\r\n            {required: true, message: '请选择归集地址', trigger: 'change'}\r\n          ],\r\n        },\r\n\r\n        sentInfo: {},//派出信息\r\n        typeDialog: false,//选择矿池\r\n        typeRadio: 'BlackIron',//默认黑铁矿\r\n        mineData: [],//矿洞列表\r\n\r\n        goblinSetInterval: null,//定时器\r\n        goblinLoading: true,//加载动画\r\n        countDownValue: 0, //秒\r\n      };\r\n    },\r\n    components: {\r\n      Password, CountDown\r\n    },\r\n    created() {\r\n      //this.addressList = accountList(0);\r\n      this.init();\r\n    },\r\n    mounted() {\r\n      setTimeout(() => {\r\n        this.getAddressList();\r\n      }, 1000);\r\n      this.goblinSetInterval = setInterval(() => {\r\n        //this.getAddressList();\r\n      }, 5000);\r\n    },\r\n    beforeDestroy() {\r\n      //离开界面清除定时器\r\n      clearInterval(this.goblinSetInterval);\r\n    },\r\n    methods: {\r\n\r\n      //初始化\r\n      async init() {\r\n        let resDataGain = await this.contractInfoByAddress(this.gainAddress);\r\n        if (resDataGain.success) {\r\n          this.gainInfo = resDataGain.data;\r\n        }\r\n\r\n        let resDataNewGain = await this.contractInfoByAddress(this.newGainAddress);\r\n        if (resDataNewGain.success) {\r\n          this.newGainInfo = resDataNewGain.data;\r\n        }\r\n\r\n        let resDataCorps = await this.contractInfoByAddress(this.corpsAddress);\r\n        //console.log(resDataCorps);\r\n        if (resDataCorps.success) {\r\n          this.corpsInfo = resDataCorps.data;\r\n        }\r\n\r\n        let resDataNFTSend = await this.contractInfoByAddress(this.NFTSendAddress);\r\n        if (resDataNFTSend.success) {\r\n          this.NFTSendInfo = resDataNFTSend.data;\r\n        }\r\n\r\n        let resDataNFTLevelUp = await this.contractInfoByAddress(this.NFTLevelUpAddress);\r\n        if (resDataNFTLevelUp.success) {\r\n          this.NFTLevelUpInfo = resDataNFTLevelUp.data;\r\n        }\r\n\r\n        //this.getMineList(this.gainAddress, 'getCaveList', '() return Ljava/util/List;', []);\r\n        this.getNewMineList(this.newGainAddress, 'getMinesList', '() return String', [])\r\n\r\n      },\r\n\r\n      /**\r\n       * 获取账户列表\r\n       */\r\n      async getAddressList() {\r\n        let newAddressData = accountList(0);\r\n        for (let item of newAddressData) {\r\n          item.addresss = superLong(item.address, 6);\r\n\r\n          if (!item.note || item.note.toString() === 'undefined') {\r\n            item.note = '';\r\n            item.labels = item.address;\r\n          } else {\r\n            item.labels = item.address + '(' + item.note + ')';\r\n          }\r\n\r\n          item.balance = '';\r\n          item.goblinBalance = '';\r\n          item.blackBalance = '';\r\n          item.tungstenBalance = '';\r\n          item.platinumBalance = '';\r\n          item.obsidianBalance = '';\r\n          item.cobaltBalance = '';\r\n        }\r\n        this.addressList = newAddressData;\r\n        this.goblinLoading = false;\r\n        this.getBalanceList();\r\n      },\r\n\r\n      /**\r\n       * 获取账户余额信息\r\n       **/\r\n      async getBalanceList() {\r\n        for (let item of this.addressList) {\r\n          item.balance === '' ? 0 : item.balance;\r\n          item.goblinBalance === '' ? 0 : item.goblinBalance;\r\n          item.blackBalance === '' ? 0 : item.blackBalance;\r\n          item.tungstenBalance === '' ? 0 : item.tungstenBalance;\r\n          item.platinumBalance === '' ? 0 : item.platinumBalance;\r\n          item.obsidianBalance === '' ? 0 : item.obsidianBalance;\r\n          item.cobaltBalance === '' ? 0 : item.cobaltBalance;\r\n\r\n          let addressInfo = await this.getAddressInfoByNode(item.address);\r\n          //console.log(addressInfo);\r\n          if (addressInfo.success) {\r\n            item.balance = parseFloat(tofix(divisionDecimals(addressInfo.data.balance), 4, -1));\r\n            let tokenList = await this.getTokenListByAddress(item.address);\r\n            item.tokens = tokenList.data.list;\r\n            for (let k of addressInfo.data.tokens) {\r\n              let newArr = k.split(',');\r\n              if (newArr[1] === 'Goblin' && newArr[0] === this.goblinAddress) {\r\n                let goblinInfo = tokenList.data.list.filter(obj => obj.tokenName === newArr[1] && obj.contractAddress === this.goblinAddress);\r\n                item.goblinBalance = parseFloat(tofix(divisionDecimals(goblinInfo[0].balance, goblinInfo[0].decimals), 4, -1));\r\n              } else if (newArr[1] === 'black_iron') {\r\n                let blackInfo = tokenList.data.list.filter(obj => obj.tokenName === newArr[1]);\r\n                item.blackBalance = parseFloat(tofix(divisionDecimals(blackInfo[0].balance, blackInfo[0].decimals), 4, -1));\r\n              } else if (newArr[1] === 'tungsten') {\r\n                let blackInfo = tokenList.data.list.filter(obj => obj.tokenName === newArr[1]);\r\n                item.tungstenBalance = parseFloat(tofix(divisionDecimals(blackInfo[0].balance, blackInfo[0].decimals), 4, -1));\r\n              } else if (newArr[1] === 'platinum') {\r\n                let blackInfo = tokenList.data.list.filter(obj => obj.tokenName === newArr[1]);\r\n                item.platinumBalance = parseFloat(tofix(divisionDecimals(blackInfo[0].balance, blackInfo[0].decimals), 4, -1));\r\n              } else if (newArr[1] === 'obsidan') {\r\n                let blackInfo = tokenList.data.list.filter(obj => obj.tokenName === newArr[1]);\r\n                item.obsidianBalance = parseFloat(tofix(divisionDecimals(blackInfo[0].balance, blackInfo[0].decimals), 4, -1));\r\n              } else if (newArr[1] === 'cobalt') {\r\n                let blackInfo = tokenList.data.list.filter(obj => obj.tokenName === newArr[1]);\r\n                item.cobaltBalance = parseFloat(tofix(divisionDecimals(blackInfo[0].balance, blackInfo[0].decimals), 4, -1));\r\n              }\r\n            }\r\n          }\r\n\r\n          let name = 'getRolesList';\r\n          //console.log(this.corpsInfo);\r\n          let methodsInfo = this.corpsInfo.methods.filter(obj => obj.name === name);\r\n          let desc = methodsInfo[0].desc;\r\n          methodsInfo[0].params[0].value = item.address;\r\n          let newArgs = getArgs(methodsInfo[0].params);\r\n          let myLegionsRes = await methodCall(this.corpsAddress, name, desc, newArgs.args);\r\n          if (myLegionsRes.success) {\r\n            item.myLegions = JSON.parse(myLegionsRes.data.result).length;\r\n            item.legionsData = JSON.parse(myLegionsRes.data.result);\r\n            for (let q of item.legionsData) {\r\n              //console.log(q);\r\n              q.levelInfo = await this.upgradeInfo(Number(q.level));\r\n              q.address = item.address;\r\n              q.createTime = moment(getLocalTime(q.birthday * 1000)).format('MM-DD HH:mm');\r\n              let nameTwo = 'earnedOf';\r\n              let methodsInfoTwo = {};\r\n              if (q.mark === '1') {\r\n                methodsInfoTwo = this.gainInfo.methods.filter(obj => obj.name === nameTwo);\r\n              } else {\r\n                methodsInfoTwo = this.newGainInfo.methods.filter(obj => obj.name === nameTwo);\r\n              }\r\n              let descTwo = methodsInfoTwo[0].desc;\r\n              methodsInfoTwo[0].params[0].value = q.place;\r\n              methodsInfoTwo[0].params[1].value = item.address;\r\n              let newArgsTwo = getArgs(methodsInfoTwo[0].params);\r\n              let resData = await this.methodCall(q.mark === '1' ? this.gainAddress : this.newGainAddress, nameTwo, descTwo, newArgsTwo.args);\r\n              //console.log(resData);\r\n              if (resData.success) {\r\n                let goblin = divisionDecimals(JSON.parse(resData.data.result)[0]).toString();\r\n                let black = divisionDecimals(JSON.parse(resData.data.result)[1]).toString();\r\n                q.goblinBlack = tofix(goblin, 2, -1) + '(GOBLIN)' + ' - ' + tofix(black, 2, -1) + '(' + q.place + ')';\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.countDownValue = 30;\r\n        //console.log(this.countDownValue);\r\n        setTimeout(() => {\r\n          this.getBalanceList();\r\n          this.countDownValue = 0;\r\n        }, 30000)\r\n      },\r\n\r\n      /**\r\n       * @disc: 升级条件\r\n       * @params: level\r\n       * @date: 2020-12-01 17:11\r\n       * @author: Wave\r\n       */\r\n      upgradeInfo(level) {\r\n        //console.log(level);\r\n        let levelInfo = '';\r\n        switch (level) {\r\n          case 1:\r\n            levelInfo = '44 blackiron';\r\n            break;\r\n          case 2:\r\n            levelInfo = '59 blackiron';\r\n            break;\r\n          case 3:\r\n            levelInfo = '73 blackiron';\r\n            break;\r\n          case 4:\r\n            levelInfo = '86 blackiron';\r\n            break;\r\n          case 5:\r\n            levelInfo = '98 blackiron';\r\n            break;\r\n          case 6:\r\n            levelInfo = '110 blackiron';\r\n            break;\r\n          case 7:\r\n            levelInfo = '121 blackiron';\r\n            break;\r\n          case 8:\r\n            levelInfo = '132 blackiron';\r\n            break;\r\n          case 9:\r\n            levelInfo = '142 blackiron';\r\n            break;\r\n          case 10:\r\n            levelInfo = '60 blackiron - 60 tungsten';\r\n            break;\r\n          case 11:\r\n            levelInfo = '62 blackiron - 62 tungsten';\r\n            break;\r\n          case 12:\r\n            levelInfo = '65 blackiron - 65 tungsten';\r\n            break;\r\n          case 13:\r\n            levelInfo = '68 blackiron - 68 tungsten';\r\n            break;\r\n          case 14:\r\n            levelInfo = '71 blackiron - 71 tungsten';\r\n            break;\r\n          case 15:\r\n            levelInfo = '73 blackiron - 73 tungsten';\r\n            break;\r\n          case 16:\r\n            levelInfo = '76 blackiron - 76 tungsten';\r\n            break;\r\n          case 17:\r\n            levelInfo = '78 blackiron - 78 tungsten';\r\n            break;\r\n          case 18:\r\n            levelInfo = '81 blackiron - 91 tungsten';\r\n            break;\r\n          case 19:\r\n            levelInfo = '83 tungsten';\r\n            break;\r\n          case 20:\r\n            levelInfo = '48 tungsten - 48 platinum';\r\n            break;\r\n          case 21:\r\n            levelInfo = '50 tungsten - 50 platinum';\r\n            break;\r\n          case 22:\r\n            levelInfo = '51 tungsten - 51 platinum';\r\n            break;\r\n          case 23:\r\n            levelInfo = '52 tungsten - 52 platinum';\r\n            break;\r\n          case 24:\r\n            levelInfo = '53 tungsten - 53 platinum';\r\n            break;\r\n          case 25:\r\n            levelInfo = '54 tungsten - 54 platinum';\r\n            break;\r\n          case 26:\r\n            levelInfo = '56 tungsten - 56 platinum';\r\n            break;\r\n          case 27:\r\n            levelInfo = '57 tungsten - 57 platinum';\r\n            break;\r\n          case 28:\r\n            levelInfo = '58 tungsten - 58 platinum';\r\n            break;\r\n          case 29:\r\n            levelInfo = '59 platinum';\r\n            break;\r\n          case 30:\r\n            levelInfo = '31 platinum - 31 obsidan';\r\n            break;\r\n          case 31:\r\n            levelInfo = '32 platinum - 32 obsidan';\r\n            break;\r\n          case 32:\r\n            levelInfo = '32 platinum - 32 obsidan';\r\n            break;\r\n          case 33:\r\n            levelInfo = '33 platinum - 33 obsidan';\r\n            break;\r\n          case 34:\r\n            levelInfo = '33 platinum - 33 obsidan';\r\n            break;\r\n          case 35:\r\n            levelInfo = '34 platinum - 34 obsidan';\r\n            break;\r\n          case 36:\r\n            levelInfo = '34 platinum - 34 obsidan';\r\n            break;\r\n          case 37:\r\n            levelInfo = '35 platinum - 35 obsidan';\r\n            break;\r\n          case 38:\r\n            levelInfo = '35 platinum - 35 obsidan';\r\n            break;\r\n          case 39:\r\n            levelInfo = '36 obsidan';\r\n            break;\r\n          case 40:\r\n            levelInfo = '21 obsidan - 21 cobalt';\r\n            break;\r\n          case 41:\r\n            levelInfo = '21 obsidan - 21 cobalt';\r\n            break;\r\n          case 42:\r\n            levelInfo = '21 obsidan - 21 cobalt';\r\n            break;\r\n          case 43:\r\n            levelInfo = '21 obsidan - 21 cobalt';\r\n            break;\r\n          case 44:\r\n            levelInfo = '22 obsidan - 22 cobalt';\r\n            break;\r\n          case 45:\r\n            levelInfo = '22 obsidan - 22 cobalt';\r\n            break;\r\n          case 46:\r\n            levelInfo = '22 obsidan - 22 cobalt';\r\n            break;\r\n          case 47:\r\n            levelInfo = '22 obsidan - 22 cobalt';\r\n            break;\r\n          case 48:\r\n            levelInfo = '23 obsidan - 23 cobalt';\r\n            break;\r\n          case 49:\r\n            levelInfo = '23 obsidan - 23 cobalt';\r\n            break;\r\n          case 50:\r\n            levelInfo = '23 obsidan - 23 cobalt';\r\n            break;\r\n          case 51:\r\n            levelInfo = '23 obsidan - 23 cobalt';\r\n            break;\r\n          case 52:\r\n            levelInfo = '24 obsidan - 24 cobalt';\r\n            break;\r\n          case 53:\r\n            levelInfo = '24 obsidan - 24 cobalt';\r\n            break;\r\n          case 54:\r\n            levelInfo = '24 obsidan - 24 cobalt';\r\n            break;\r\n          case 55:\r\n            levelInfo = '24 obsidan - 24 cobalt';\r\n            break;\r\n          case 56:\r\n            levelInfo = '25 obsidan - 25 cobalt';\r\n            break;\r\n          case 57:\r\n            levelInfo = '25 obsidan - 25 cobalt';\r\n            break;\r\n          case 58:\r\n            levelInfo = '25 obsidan - 25 cobalt';\r\n            break;\r\n          case 59:\r\n            levelInfo = '25 cobalt';\r\n            break;\r\n          default:\r\n            levelInfo = '最高级了，封顶了';\r\n        }\r\n        return levelInfo\r\n      },\r\n\r\n      /**\r\n       * 获取地址网络信息\r\n       * @param address\r\n       **/\r\n      async getAddressInfoByNode(address) {\r\n        return await this.$post('/', 'getAccount', [address])\r\n          .then((response) => {\r\n            //console.log(response);\r\n            if (response.hasOwnProperty(\"result\")) {\r\n              return {success: true, data: response.result}\r\n            } else {\r\n              return {success: false, data: response}\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {success: false, data: error}\r\n          });\r\n      },\r\n\r\n      /**\r\n       * 获取地址代币资产信息\r\n       * @param pageSize\r\n       * @param pageRows\r\n       * @param address\r\n       **/\r\n      async getTokenListByAddress(address, pageSize = 1, pageRows = 100) {\r\n        return await this.$post('/', 'getAccountTokens', [pageSize, pageRows, address])\r\n          .then((response) => {\r\n            //console.log(response);\r\n            if (response.hasOwnProperty(\"result\")) {\r\n              return {success: true, data: response.result}\r\n            } else {\r\n              return {success: false, data: response}\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {success: false, data: error}\r\n          });\r\n      },\r\n\r\n      /**\r\n       * 获取合约详情根据合约地址\r\n       * @param address\r\n       **/\r\n      async contractInfoByAddress(address) {\r\n        return await this.$post('/', 'getContract', [address])\r\n          .then((response) => {\r\n            //console.log(response);\r\n            if (response.hasOwnProperty(\"result\")) {\r\n              //this.contractInfo = response.result;\r\n              return {success: true, data: response.result}\r\n            } else {\r\n              return {success: false, data: response}\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {success: false, data: error}\r\n          });\r\n      },\r\n\r\n      /**\r\n       * 不上链方法调用\r\n       * @param contractAddress\r\n       * @param methodName\r\n       * @param methodDesc\r\n       * @param args\r\n       */\r\n      async methodCall(contractAddress, methodName, methodDesc, args) {\r\n        //console.log(contractAddress, methodName, methodDesc, args);\r\n        return await this.$post('/', 'invokeView', [contractAddress, methodName, methodDesc, args])\r\n          .then((response) => {\r\n            //console.log(response);\r\n            if (response.hasOwnProperty(\"result\")) {\r\n              return {success: true, data: response.result}\r\n            } else {\r\n              return {success: false, data: response}\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {success: false, data: error}\r\n          });\r\n      },\r\n\r\n      //统计方法\r\n      getSummaries(param) {\r\n        const {columns, data} = param;\r\n        const sums = [];\r\n        columns.forEach((column, index) => {\r\n          //console.log(index);\r\n          if (index === 0) {\r\n            sums[index] = '合计';\r\n            return;\r\n          } else if (index === 1) {\r\n            sums[index] = '';\r\n            return;\r\n          } else if (index === 9) {\r\n            sums[index] = '';\r\n            return;\r\n          }\r\n          const values = data.map(item => Number(item[column.property]));\r\n          if (!values.every(value => isNaN(value))) {\r\n            sums[index] = values.reduce((prev, curr) => {\r\n              const value = Number(curr);\r\n              if (!isNaN(value)) {\r\n                return Number(parseFloat(Plus(prev, curr).toString()));\r\n              } else {\r\n                return prev;\r\n              }\r\n            }, 0);\r\n            sums[index] += '';\r\n          } else {\r\n            sums[index] = '';\r\n          }\r\n        });\r\n        return sums;\r\n      },\r\n\r\n      /**\r\n       * @disc: 选择资产\r\n       * @params:\r\n       * @date: 2020-11-18 17:30\r\n       * @author: Wave\r\n       */\r\n      async changeAssets(e) {\r\n        //console.log(e);\r\n        let newAssetsInfo = this.assetsList.filter(obj => obj.tokenName === e);\r\n        //console.log(newAssetsInfo);\r\n        this.guijiForm.amount = newAssetsInfo[0].balances;\r\n\r\n        if (newAssetsInfo[0].tokenName === 'Goblin' && !this.goblinInfo.methods) {\r\n          let resDataGoblin = await this.contractInfoByAddress(this.goblinAddress);\r\n          if (resDataGoblin.success) {\r\n            this.goblinInfo = resDataGoblin.data;\r\n          }\r\n        } else if (newAssetsInfo[0].tokenName === 'black_iron' && !this.blackIronInfo.methods) {\r\n          let resDataBlackIron = await this.contractInfoByAddress(this.blackIronAddress);\r\n          if (resDataBlackIron.success) {\r\n            this.blackIronInfo = resDataBlackIron.data;\r\n          }\r\n        } else if (newAssetsInfo[0].tokenName === 'tungsten' && !this.tungstenInfo.methods) {\r\n          let resDataTungsten = await this.contractInfoByAddress(this.tungstenAddress);\r\n          if (resDataTungsten.success) {\r\n            this.tungstenInfo = resDataTungsten.data;\r\n          }\r\n        } else if (newAssetsInfo[0].tokenName === 'platinum' && !this.platinumInfo.methods) {\r\n          let resDataPlatinum = await this.contractInfoByAddress(this.platinumAddress);\r\n          if (resDataPlatinum.success) {\r\n            this.platinumInfo = resDataPlatinum.data;\r\n          }\r\n        } else if (newAssetsInfo[0].tokenName === 'obsidan' && !this.obsidanInfo.methods) {\r\n          let resDataObsidan = await this.contractInfoByAddress(this.obsidanAddress);\r\n          if (resDataObsidan.success) {\r\n            this.obsidanInfo = resDataObsidan.data;\r\n          }\r\n        } else if (newAssetsInfo[0].tokenName === 'cobalt' && !this.cobaltInfo.methods) {\r\n          let resDataCobalt = await this.contractInfoByAddress(this.cobaltAddress);\r\n          if (resDataCobalt.success) {\r\n            this.cobaltInfo = resDataCobalt.data;\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @disc: guiji\r\n       * @params:\r\n       * @date: 2020-11-18 15:09\r\n       * @author: Wave\r\n       */\r\n      async guiji(rowInfo) {\r\n        //console.log(rowInfo);\r\n        this.contractCallData = {};\r\n        this.guiDialog = true;\r\n        this.guijiForm.assets = '';\r\n        this.guijiForm.amount = '';\r\n        this.guijiForm.toAddress = '';\r\n        this.guijiForm.fromAddress = rowInfo.address;\r\n        this.assetsList = [];\r\n        for (let item of rowInfo.tokens) {\r\n          //console.log(item);\r\n          item.balances = divisionDecimals(item.balance, item.decimals).toString();\r\n          if (item.tokenName === 'Goblin' && item.contractAddress === 'NULSd6HgwJmD4SC1NAJXu8tC6NKsWs99P2jpw') {\r\n            this.assetsList.push(item)\r\n          } else if (item.tokenName === 'black_iron') {\r\n            this.assetsList.push(item)\r\n          } else if (item.tokenName === 'tungsten') {\r\n            this.assetsList.push(item)\r\n          } else if (item.tokenName === 'platinum') {\r\n            this.assetsList.push(item)\r\n          } else if (item.tokenName === 'obsidan') {\r\n            this.assetsList.push(item)\r\n          } else if (item.tokenName === 'cobalt') {\r\n            this.assetsList.push(item)\r\n          }\r\n        }\r\n        //console.log(this.assetsList);\r\n        if (this.assetsList.length !== 0) {\r\n          this.guijiForm.assets = this.assetsList[0].tokenName;\r\n          this.guijiForm.amount = this.assetsList[0].balances;\r\n          this.changeAssets(this.guijiForm.assets);\r\n          this.guijiForm.toAddress = this.addressList[0].address;\r\n        }\r\n\r\n      },\r\n\r\n      /**\r\n       * @disc: 开始归集\r\n       * @params:\r\n       * @date: 2020-11-18 16:25\r\n       * @author: Wave\r\n       */\r\n      startCollection(formName) {\r\n        this.$refs[formName].validate(async (valid) => {\r\n          if (valid) {\r\n            let contractInfo = {};\r\n            let contractAddress = '';\r\n            //console.log(this.guijiForm.assets);\r\n            if (this.guijiForm.assets === 'Goblin') {\r\n              contractInfo = this.goblinInfo;\r\n              contractAddress = this.goblinAddress\r\n            } else if (this.guijiForm.assets === 'black_iron') {\r\n              contractInfo = this.blackIronInfo;\r\n              contractAddress = this.blackIronAddress\r\n            } else if (this.guijiForm.assets === 'tungsten') {\r\n              contractInfo = this.tungstenInfo;\r\n              contractAddress = this.tungstenAddress\r\n            } else if (this.guijiForm.assets === 'platinum') {\r\n              contractInfo = this.platinumInfo;\r\n              contractAddress = this.platinumAddress\r\n            } else if (this.guijiForm.assets === 'obsidan') {\r\n              contractInfo = this.obsidanInfo;\r\n              contractAddress = this.obsidanAddress\r\n            } else if (this.guijiForm.assets === 'cobalt') {\r\n              contractInfo = this.cobaltInfo;\r\n              contractAddress = this.cobaltAddress\r\n            }\r\n\r\n            let name = 'transfer';\r\n            let methodsInfo = contractInfo.methods.filter(obj => obj.name === name);\r\n            //console.log(methodsInfo[0]); contractAddressTungsten\r\n            methodsInfo[0].params[0].value = this.guijiForm.toAddress;\r\n            methodsInfo[0].params[1].value = Number(timesDecimals(this.guijiForm.amount, contractInfo.decimals));\r\n            let newArgs = getArgs(methodsInfo[0].params);\r\n            this.chainMethodCall(this.guijiForm.fromAddress, methodsInfo[0], contractAddress, 0, newArgs);\r\n            this.getBalanceByAddress(chainInfo.chainId, 1, this.guijiForm.fromAddress);\r\n            this.$refs.password.showPassword(true, this.guijiForm.fromAddress);\r\n\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n\r\n      },\r\n\r\n      /**\r\n       * @disc:升级\r\n       * @params:\r\n       * @date: 2020-11-18 17:47\r\n       * @author: Wave\r\n       */\r\n      upgrade(info) {\r\n        //console.log(info);\r\n        this.contractCallData = {};\r\n        let name = 'upgrade';\r\n        let methodsInfo = this.NFTLevelUpInfo.methods.filter(obj => obj.name === name);\r\n        //console.log(methodsInfo[0].params);\r\n        methodsInfo[0].params[0].value = info.tokenId;\r\n        let newArgs = getArgs(methodsInfo[0].params);\r\n        this.chainMethodCall(info.address, methodsInfo[0], this.NFTLevelUpAddress, 0, newArgs);\r\n        this.getBalanceByAddress(chainInfo.chainId, 1, info.address);\r\n        this.$refs.password.showPassword(true, info.address);\r\n      },\r\n\r\n      /**\r\n       * @disc: 派出\r\n       * @params:\r\n       * @date: 2020-11-18 17:47\r\n       * @author: Wave\r\n       */\r\n      sent(info) {\r\n        //console.log(info);\r\n        this.contractCallData = {};\r\n        this.sentInfo = info;\r\n        if (Number(info.level) >= 10) {\r\n          //console.log(this.mineData);\r\n          for (let item of this.mineData) {\r\n            item.isClick = false;\r\n            if (item._caveName === 'BlackIron') {\r\n              item.isClick = true;\r\n            } else if (item._caveName === 'Tungsten' && Number(info.level) >= 10) {\r\n              item.isClick = true;\r\n            } else if (item._caveName === 'Platinum' && Number(info.level) >= 20) {\r\n              item.isClick = true;\r\n            } else if (item._caveName === 'Obsidian' && Number(info.level) >= 30) {\r\n              item.isClick = true;\r\n            } else if (item._caveName === 'Cobalt' && Number(info.level) >= 40) {\r\n              item.isClick = true;\r\n            } else if (item._caveName === 'Titanium' && Number(info.level) >= 40) {\r\n              item.isClick = true;\r\n            }\r\n          }\r\n\r\n          /* <el-radio :label=\"2\" v-show=\"sentInfo.level >=10\">钨矿(新矿洞)</el-radio>\r\n               <el-radio :label=\"3\" v-show=\"sentInfo.level >=20\">铂金矿(新矿洞)</el-radio>\r\n               <el-radio :label=\"4\" v-show=\"sentInfo.level >=30\">黑耀矿</el-radio>\r\n               <el-radio :label=\"5\" v-show=\"sentInfo.level >=40\">钴矿</el-radio>-->*/\r\n          this.typeDialog = true;\r\n        } else {\r\n          this.typeSubmit()\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @disc: 选择类型提交\r\n       * @params:\r\n       * @date: 2020-11-18 18:33\r\n       * @author: Wave\r\n       */\r\n      typeSubmit() {\r\n        //console.log(this.typeRadio);\r\n        let name = 'sendToCave'; //sendToCave\r\n        let methodsInfo = this.NFTSendInfo.methods.filter(obj => obj.name === name);\r\n        //console.log(methodsInfo[0]);\r\n        methodsInfo[0].params[0].value = this.sentInfo.tokenId;\r\n        methodsInfo[0].params[1].value = this.typeRadio;\r\n        let newInfo = this.mineData.filter(obj => obj._caveName === this.typeRadio)[0];\r\n        methodsInfo[0].params[2].value = newInfo._caveStatus ? '0' : '1';\r\n        let newArgs = getArgs(methodsInfo[0].params);\r\n        this.chainMethodCall(this.sentInfo.address, methodsInfo[0], this.NFTSendAddress, 0, newArgs);\r\n        this.getBalanceByAddress(chainInfo.chainId, 1, this.sentInfo.address);\r\n        this.$refs.password.showPassword(true, this.sentInfo.address);\r\n        this.typeDialog = false;\r\n      },\r\n\r\n      /**\r\n       * @disc: 获取\r\n       * @params:\r\n       * @date: 2020-11-18 11:45\r\n       * @author: Wave\r\n       */\r\n      async acquire(info) {\r\n        //console.log(info);\r\n        this.contractCallData = {};\r\n        let name = 'claimEarned';\r\n        let methodsInfo = {};\r\n        if (info.mark === '0') {\r\n          methodsInfo = this.newGainInfo.methods.filter(obj => obj.name === name);\r\n        } else {\r\n          methodsInfo = this.gainInfo.methods.filter(obj => obj.name === name);\r\n        }\r\n        //console.log(methodsInfo[0].params);\r\n        methodsInfo[0].params[0].value = info.place;\r\n        let newArgs = getArgs(methodsInfo[0].params);\r\n        this.chainMethodCall(info.address, methodsInfo[0], info.mark === '1' ? this.gainAddress : this.newGainAddress, 0, newArgs);\r\n        //this.chainMethodCall(info.address, methodsInfo[0], info.mark === '1' ? this.gainAddress : this.newGainAddress, 0, newArgs);\r\n        this.getBalanceByAddress(chainInfo.chainId, 1, info.address);\r\n        this.$refs.password.showPassword(true, info.address);\r\n        //let resData = await this.chainMethodCall(info.address, methodsInfo[0], this.contractAddressBlackIron, values);\r\n        //console.log(resData);\r\n      },\r\n\r\n      /**\r\n       * @disc: 迁回\r\n       * @params:\r\n       * @date: 2020-11-18 11:45\r\n       * @author: Wave\r\n       */\r\n      async backs(info) {\r\n        //console.log(info);\r\n        this.contractCallData = {};\r\n        let name = 'dismissFromCave';\r\n        let methodsInfo = this.NFTSendInfo.methods.filter(obj => obj.name === name);\r\n        methodsInfo[0].params[0].value = info.tokenId;\r\n        methodsInfo[0].params[1].value = info.place;\r\n        methodsInfo[0].params[2].value = info.mark;\r\n        let newArgs = getArgs(methodsInfo[0].params);\r\n        this.chainMethodCall(info.address, methodsInfo[0], this.NFTSendAddress, 0, newArgs);\r\n        this.getBalanceByAddress(chainInfo.chainId, 1, info.address);\r\n        this.$refs.password.showPassword(true, info.address);\r\n      },\r\n\r\n      /**\r\n       * @disc: 获取并迁回\r\n       * @params:\r\n       * @date: 2020-11-19 17:35\r\n       * @author: Wave\r\n       */\r\n      acquireAndBacks(info) {\r\n        //console.log(info);\r\n        this.contractCallData = {};\r\n        //let name = 'remandAllFromMine';\r\n        let name = 'dismissAllFromCave';\r\n        /*console.log(this.contractInfo);\r\n        console.log(this.contractAddress);*/\r\n        let methodsInfo = this.NFTSendInfo.methods.filter(obj => obj.name === name);\r\n        //console.log(methodsInfo[0]);\r\n        methodsInfo[0].params[0].value = info.place;\r\n        methodsInfo[0].params[1].value = info.mark;\r\n        let newArgs = getArgs(methodsInfo[0].params);\r\n        this.chainMethodCall(info.address, methodsInfo[0], this.NFTSendAddress, 0, newArgs);\r\n        this.getBalanceByAddress(chainInfo.chainId, 1, info.address);\r\n        this.$refs.password.showPassword(true, info.address);\r\n      },\r\n\r\n      /**\r\n       * 上链方法调用\r\n       */\r\n      chainMethodCall(address, methodsInfo, contractAddress, values, newArgs) {\r\n        //console.log(address, methodsInfo, contractAddress, values, newArgs);\r\n        if (methodsInfo.params.length !== 0) { //有参数\r\n          if (newArgs.allParameter) {\r\n            this.validateContractCall(address, Number(Times(values, 100000000)), sdk.CONTRACT_MAX_GASLIMIT, sdk.CONTRACT_MINIMUM_PRICE, contractAddress, methodsInfo.name, methodsInfo.desc, newArgs.args);\r\n          }\r\n        } else { //没参数\r\n          this.validateContractCall(address, Number(Times(values, 100000000)), sdk.CONTRACT_MAX_GASLIMIT, sdk.CONTRACT_MINIMUM_PRICE, contractAddress, methodsInfo.name, methodsInfo.desc, newArgs);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * 验证调用合约交易\r\n       * @param sender\r\n       * @param value\r\n       * @param gasLimit\r\n       * @param price\r\n       * @param contractAddress\r\n       * @param methodName\r\n       * @param methodDesc\r\n       * @param args\r\n       */\r\n      async validateContractCall(sender, value, gasLimit, price, contractAddress, methodName, methodDesc, args) {\r\n        //console.log(sender, value, gasLimit, price, contractAddress, methodName, methodDesc, args);\r\n        return await this.$post('/', 'validateContractCall', [sender, value, gasLimit, price, contractAddress, methodName, methodDesc, args])\r\n          .then((response) => {\r\n            //console.log(response);\r\n            if (response.result.success) {\r\n              //return {success: true, data: response.result};\r\n              this.imputedContractCallGas(sender, value, contractAddress, methodName, methodDesc, args)\r\n            } else {\r\n              this.$message({\r\n                message: this.$t('tips.tips26') + response.result.msg,\r\n                type: 'error',\r\n                duration: 3000\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.$message({message: this.$t('tips.tips26') + error, type: 'error', duration: 3000});\r\n          });\r\n      },\r\n\r\n      /**\r\n       * 预估调用合约交易的gas\r\n       * @param sender\r\n       * @param value\r\n       * @param contractAddress\r\n       * @param methodName\r\n       * @param methodDesc\r\n       * @param args\r\n       */\r\n      async imputedContractCallGas(sender, value, contractAddress, methodName, methodDesc, args) {\r\n        return await this.$post('/', 'imputedContractCallGas', [sender, value, contractAddress, methodName, methodDesc, args])\r\n          .then(async (response) => {\r\n            //console.log(response);\r\n            if (response.hasOwnProperty(\"result\")) {\r\n              let contractConstructorArgsTypes = await this.getContractMethodArgsTypes(contractAddress, methodName, methodDesc);\r\n              if (!contractConstructorArgsTypes.success) {\r\n                this.$message({\r\n                  message: this.$t('call.call4') + response,\r\n                  type: 'error',\r\n                  duration: 3000\r\n                });\r\n                return;\r\n              }\r\n              let newArgs = utils.twoDimensionalArray(args, contractConstructorArgsTypes.data);\r\n              //console.log(newArgs);\r\n              this.contractCallData = {\r\n                chainId: chainInfo.chainId,\r\n                sender: sender,\r\n                contractAddress: contractAddress,\r\n                value: value,\r\n                gasLimit: response.result.gasLimit,\r\n                price: 25,\r\n                methodName: methodName,\r\n                methodDesc: methodDesc,\r\n                args: newArgs\r\n              };\r\n              //console.log(this.contractCallData)\r\n            } else {\r\n              this.$message({message: this.$t('call.call4') + response, type: 'error', duration: 3000});\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.$message({\r\n              message: this.$t('call.call5') + JSON.stringify(error),\r\n              type: 'error',\r\n              duration: 3000\r\n            });\r\n          });\r\n      },\r\n\r\n      /**\r\n       * 获取合约指定函数的参数类型\r\n       * @param contractAddress\r\n       * @param  methodName\r\n       * @param  methodDesc\r\n       */\r\n      async getContractMethodArgsTypes(contractAddress, methodName, methodDesc) {\r\n        return await this.$post('/', 'getContractMethodArgsTypes', [contractAddress, methodName, methodDesc])\r\n          .then((response) => {\r\n            //console.log(response);\r\n            if (response.hasOwnProperty(\"result\")) {\r\n              return {success: true, data: response.result};\r\n            } else {\r\n              return {success: false, data: response.error};\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            return {success: false, data: error};\r\n          });\r\n      },\r\n\r\n      /**\r\n       * 获取账户余额\r\n       * @param assetChainId\r\n       * @param assetId\r\n       * @param address\r\n       **/\r\n      getBalanceByAddress(assetChainId, assetId, address) {\r\n        getBalanceOrNonceByAddress(address, assetChainId, assetId).then((response) => {\r\n          //console.log(response);\r\n          if (response.success) {\r\n            this.balanceInfo = response;\r\n          } else {\r\n            this.$message({message: this.$t('public.err2') + response, type: 'error', duration: 3000});\r\n          }\r\n        }).catch((error) => {\r\n          this.$message({message: this.$t('public.err3') + error, type: 'error', duration: 3000});\r\n        });\r\n      },\r\n\r\n      /**\r\n       *  获取密码框的密码\r\n       * @param password\r\n       **/\r\n      async passSubmit(password) {\r\n        //console.log(password);\r\n        if (!this.contractCallData.sender) {\r\n          this.$message({message: \"请在输入密码框稍等几秒，调用验证合约未完成!\", type: 'warning', duration: 3000});\r\n          return;\r\n        }\r\n        let newAddressInfo = this.addressList.filter(obj => obj.address === this.contractCallData.sender);\r\n        let passwordInfo = await passwordVerification(newAddressInfo[0], password);\r\n        //console.log(passwordInfo);\r\n        if (!passwordInfo.success) {\r\n          this.$message({message: this.$t('tips.tips4'), type: 'error', duration: 3000});\r\n          for (let item of this.addressList) {\r\n            if (item.address === newAddressInfo[0].address) {\r\n              item.password = '';\r\n            }\r\n          }\r\n          //console.log(this.addressList);\r\n          localStorage.setItem('addressData', JSON.stringify(this.addressList));\r\n          return;\r\n        }\r\n\r\n        //console.log(this.contractCallData);\r\n        let amount = Number(Times(this.contractCallData.gasLimit, this.contractCallData.price));\r\n        let transferInfo = {\r\n          fromAddress: this.contractCallData.sender,\r\n          assetsChainId: chainInfo.chainId,\r\n          assetsId: 1,\r\n          amount: amount,\r\n          fee: 100000\r\n        };\r\n\r\n        amount = Number(Plus(transferInfo.fee, amount));\r\n        let remark = '';\r\n        //console.log(this.balanceInfo);\r\n        let inOrOutputs = await inputsOrOutputs(transferInfo, this.balanceInfo, 16);\r\n        //console.log(inOrOutputs);\r\n        let tAssemble = await nuls.transactionAssemble(inOrOutputs.data.inputs, inOrOutputs.data.outputs, remark, 16, this.contractCallData);\r\n        let txhex = '';\r\n        //获取手续费\r\n        let newFee = countFee(tAssemble, 1);\r\n        //手续费大于0.001的时候重新组装交易及签名\r\n        if (transferInfo.fee !== newFee) {\r\n          transferInfo.fee = newFee;\r\n          inOrOutputs = await inputsOrOutputs(transferInfo, this.balanceInfo, 16);\r\n          tAssemble = await nuls.transactionAssemble(inOrOutputs.data.inputs, inOrOutputs.data.outputs, remark, 16, this.contractCallData);\r\n          txhex = await nuls.transactionSerialize(passwordInfo.pri, passwordInfo.pub, tAssemble);\r\n        } else {\r\n          txhex = await nuls.transactionSerialize(passwordInfo.pri, passwordInfo.pub, tAssemble);\r\n        }\r\n        //console.log(txhex);\r\n        this.typeRadio = 1;\r\n        if (this.guiDialog) {\r\n          this.guiDialog = false;\r\n        }\r\n        //验证交易\r\n        /*let validateTxRes = await validateTx(txhex);\r\n        console.log(validateTxRes);*/\r\n\r\n        //验证并广播交易\r\n        await validateAndBroadcast(txhex).then((response) => {\r\n          //console.log(response);\r\n          if (response.success) {\r\n            this.$message({message: this.$t('tips.tips15'), type: 'success', duration: 1000});\r\n          } else {\r\n            this.$message({\r\n              message: '对不起发生错误了，您可以再试一下 --.--' + JSON.stringify(response.data.error.message),\r\n              type: 'error',\r\n              duration: 3000\r\n            });\r\n\r\n          }\r\n        }).catch((err) => {\r\n          this.$message({message: this.$t('public.err1') + err, type: 'error', duration: 3000});\r\n        });\r\n      },\r\n\r\n      /**\r\n       * 连接跳转\r\n       * @param name\r\n       * @param param\r\n       */\r\n      toUrl(name, param) {\r\n        //console.log(name)\r\n        this.$router.push({\r\n          name: name,\r\n          query: {'address': param}\r\n        })\r\n      },\r\n\r\n      /**\r\n       * @disc: 获取矿洞列表\r\n       * @params:\r\n       * @date: 2020-12-18 14:27\r\n       * @author: Wave\r\n       */\r\n      async getMineList(contractAddress, methodName, methodDesc, args) {\r\n        let resData = await methodCall(contractAddress, methodName, methodDesc, args);\r\n        //console.log(resData);\r\n        if (resData.success) {\r\n          let newData = JSON.parse(resData.data.result);\r\n          for (let item of newData) {\r\n            let newArr = {caveName: item._caveName, isNew: false};\r\n            this.mineData.push(newArr)\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * @disc: 获取新矿洞列表\r\n       * @params:\r\n       * @date: 2020-12-18 14:27\r\n       * @author: Wave\r\n       */\r\n      async getNewMineList(contractAddress, methodName, methodDesc, args) {\r\n        let resData = await methodCall(contractAddress, methodName, methodDesc, args);\r\n        this.mineData = JSON.parse(resData.data.result);\r\n        let x = 2, y = 3;\r\n        this.mineData.splice(x - 1, 1, ...this.mineData.splice(y - 1, 1, this.mineData[x - 1]));\r\n        let a = 5, b = 6;\r\n        this.mineData.splice(a - 1, 1, ...this.mineData.splice(b - 1, 1, this.mineData[a - 1]));\r\n        //console.log(this.mineData);\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n  .goblin {\r\n    margin-bottom: 50px;\r\n\r\n    .lis {\r\n      width: 85rem;\r\n      margin: 0 auto;\r\n\r\n      ul {\r\n        li {\r\n          width: 5rem;\r\n          text-align: center;\r\n          height: 1.6rem;\r\n          line-height: 1.6rem;\r\n        }\r\n\r\n        .w100 {\r\n          width: 18rem;\r\n        }\r\n\r\n        .w200 {\r\n          width: 20rem;\r\n\r\n          .el-button {\r\n            padding: 0 0.2rem;\r\n          }\r\n        }\r\n      }\r\n\r\n      .titles {\r\n        li {\r\n          background-color: #c1c1c1;\r\n        }\r\n      }\r\n    }\r\n\r\n    .guiji-dialog {\r\n      .el-dialog {\r\n        .el-dialog__body {\r\n          .el-form {\r\n            .el-form-item {\r\n              .el-form-item__label {\r\n                display: block;\r\n                float: none;\r\n                text-align: left;\r\n              }\r\n\r\n              .el-form-item__content {\r\n                .el-select {\r\n                  width: 100%;\r\n\r\n                  .el-input {\r\n                    width: 100%;\r\n                  }\r\n\r\n                  .el-input__inner {\r\n                    width: 100%;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        .dialog-footer {\r\n          .el-button--success {\r\n            width: 15rem;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Goblin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Goblin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Goblin.vue?vue&type=template&id=11ecf1b5&\"\nimport script from \"./Goblin.vue?vue&type=script&lang=js&\"\nexport * from \"./Goblin.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Goblin.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-dialog',{staticClass:\"password-dialog\",attrs:{\"title\":_vm.$t('tips.password0'),\"visible\":_vm.passwordVisible,\"top\":\"30vh\",\"width\":_vm.width,\"close-on-click-modal\":false,\"close-on-press-escape\":false},on:{\"update:visible\":function($event){_vm.passwordVisible=$event},\"open\":_vm.passwordShow,\"close\":_vm.passwordClose}},[_c('el-form',{ref:\"passwordForm\",attrs:{\"model\":_vm.passwordForm,\"rules\":_vm.passwordRules},nativeOn:{\"submit\":function($event){$event.preventDefault();}}},[_c('el-form-item',{attrs:{\"prop\":\"password\"}},[_c('el-input',{ref:\"inpus\",attrs:{\"type\":\"password\",\"maxlength\":22},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.enterSubmit('passwordForm')}},model:{value:(_vm.passwordForm.password),callback:function ($$v) {_vm.$set(_vm.passwordForm, \"password\", $$v)},expression:\"passwordForm.password\"}})],1)],1),(_vm.isShowKeep)?_c('el-checkbox',{model:{value:(_vm.keepRadio),callback:function ($$v) {_vm.keepRadio=$$v},expression:\"keepRadio\"}},[_c('span',[_vm._v(\"记住密码\")])]):_vm._e(),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.passwordClose}},[_vm._v(_vm._s(_vm.$t('public.cancel')))]),_c('el-button',{attrs:{\"type\":_vm.isDisabled ? 'info': 'success',\"disabled\":_vm.isDisabled,\"id\":\"passwordInfo\"},on:{\"click\":function($event){return _vm.dialogSubmit('passwordForm')}}},[_c('span',[_vm._v(\" \"+_vm._s(_vm.disabledInfo))])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <el-dialog :title=\"$t('tips.password0')\" :visible.sync=\"passwordVisible\" top=\"30vh\" :width=\"width\"\r\n             class=\"password-dialog\"\r\n             :close-on-click-modal=\"false\"\r\n             :close-on-press-escape=\"false\"\r\n             @open=\"passwordShow\"\r\n             @close=\"passwordClose\">\r\n    <el-form ref=\"passwordForm\" :model=\"passwordForm\" :rules=\"passwordRules\" @submit.native.prevent>\r\n      <el-form-item prop=\"password\">\r\n        <el-input v-model=\"passwordForm.password\" type=\"password\" :maxlength=\"22\" ref=\"inpus\"\r\n                  @keyup.enter.native=\"enterSubmit('passwordForm')\">\r\n        </el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-checkbox v-if=\"isShowKeep\" v-model=\"keepRadio\">\r\n      <span>记住密码</span>\r\n    </el-checkbox>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"passwordClose\">{{$t('public.cancel')}}</el-button>\r\n\r\n      <el-button :type=\"isDisabled ? 'info': 'success'\" @click=\"dialogSubmit('passwordForm')\" :disabled=\"isDisabled\"\r\n                 id=\"passwordInfo\">\r\n        <span> {{disabledInfo}}</span>\r\n      </el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\n\r\n  import {IsPC, accountList} from '@/api/util'\r\n\r\n  export default {\r\n    props: {\r\n      isTime: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n    },\r\n    data() {\r\n      let validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error(this.$t('tips.password0')))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n      return {\r\n        addressList: [],//账户列表\r\n        addressInfo: {},//账户信息\r\n        passwordVisible: false,\r\n        passwordForm: {\r\n          password: '',\r\n        },\r\n        passwordRules: {\r\n          password: [\r\n            {validator: validatePass, trigger: ['blur', 'change']}\r\n          ]\r\n        },\r\n        isShowKeep: false,//是否显示记住密码\r\n        keepRadio: false,//是否记住密码\r\n        timeLag: 300000,//时差\r\n        width: IsPC() ? '35%' : '95%',\r\n        isDisabled: false,\r\n        disabledValue: 0,\r\n        disabledInfo: '',\r\n      }\r\n    },\r\n    created() {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        //this.passwordForm.password = 'nuls123456'\r\n      }\r\n    },\r\n    mounted() {\r\n    },\r\n    watch: {\r\n      passwordVisible(val) {\r\n        if (val) {\r\n          setTimeout(() => {\r\n            this.$refs['inpus'].focus()\r\n          }, 200)\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n\r\n      /**\r\n       * 回车提交\r\n       * @param formName\r\n       */\r\n      enterSubmit(formName) {\r\n        if (this.passwordForm.password) {\r\n          this.dialogSubmit(formName);\r\n        }\r\n      },\r\n      passwordClose() {\r\n        this.$refs['passwordForm'].resetFields();\r\n        this.passwordVisible = false;\r\n        this.timeLag = 300000;\r\n        this.keepRadio = false;\r\n      },\r\n      showPassword(boolean, address) {\r\n        //console.log(address);\r\n        this.addressList = accountList(0);\r\n        if (address) {\r\n          this.isShowKeep = true;\r\n          this.addressInfo = this.addressList.filter(obj => obj.address === address)[0];\r\n          if (this.addressInfo.password) {\r\n            this.passwordForm.password = this.addressInfo.password;\r\n            this.keepRadio = true;\r\n            this.disabledValue = 3;\r\n            this.isDisabled = true;\r\n            this.disabledInfo = \"合约参数验证中:\" + this.disabledValue;\r\n            let interval = setInterval(() => {\r\n              this.disabledValue = this.disabledValue - 1;\r\n              this.disabledInfo = \"合约参数验证中:\" + this.disabledValue;\r\n              if (this.disabledValue === 0) {\r\n                clearInterval(interval);\r\n                this.isDisabled = false;\r\n                this.disabledInfo = this.$t('public.confirm')\r\n              }\r\n            }, 1000);\r\n          }else{\r\n            this.isShowKeep = true;\r\n            this.isDisabled = false;\r\n            this.disabledInfo = this.$t('public.confirm')\r\n          }\r\n        } else {\r\n          this.isShowKeep = false;\r\n          this.isDisabled = false;\r\n          this.disabledInfo = this.$t('public.confirm')\r\n        }\r\n        this.passwordVisible = boolean;\r\n\r\n      },\r\n      //弹出密码输入框\r\n      dialogSubmit(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            if (this.keepRadio) {\r\n              //if (this.keepRadio && !this.addressInfo.keepStart) {\r\n              //let keepStart = new Date().getTime();\r\n              for (let item of this.addressList) {\r\n                if (item.address === this.addressInfo.address) {\r\n                  //item.keepStart = keepStart;\r\n                  item.password = this.passwordForm.password;\r\n                }\r\n              }\r\n            } else {\r\n              for (let item of this.addressList) {\r\n                if (item.address === this.addressInfo.address) {\r\n                  item.password = '';\r\n                }\r\n              }\r\n            }\r\n            //console.log(this.addressList);\r\n            localStorage.setItem('addressData', JSON.stringify(this.addressList));\r\n            this.$emit('passwordSubmit', this.passwordForm.password);\r\n            this.passwordVisible = false;\r\n          } else {\r\n            return false\r\n          }\r\n        })\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n  .password-dialog {\r\n    .el-dialog {\r\n      width: 370px;\r\n      .el-dialog__header {\r\n        padding: 10px;\r\n        line-height: 26px;\r\n        background-color: #F5F6F9 !important;\r\n        border-color: #c8c7cc;\r\n        .el-dialog__headerbtn {\r\n          width: 20px;\r\n          height: 20px;\r\n          top: -10px;\r\n          right: -10px;\r\n          border-radius: 10px;\r\n        }\r\n      }\r\n      .el-dialog__body {\r\n        background-color: #F5F6F9 !important;\r\n        padding: 30px 20px 30px 20px !important;\r\n        .el-form {\r\n          .el-form-item {\r\n            .el-form-item__label {\r\n              line-height: 0;\r\n              padding: 28px 0 20px 0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      .el-dialog__footer {\r\n        text-align: center;\r\n        background-color: #F5F6F9 !important;\r\n        line-height: 30px;\r\n        .dialog-footer {\r\n          padding: 1rem 1rem 0.1rem;\r\n          .el-button {\r\n            width: 9.5rem;\r\n          }\r\n          .el-button--success {\r\n            span {\r\n              color: white;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PasswordBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PasswordBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PasswordBar.vue?vue&type=template&id=2e33f198&\"\nimport script from \"./PasswordBar.vue?vue&type=script&lang=js&\"\nexport * from \"./PasswordBar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PasswordBar.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\n\nfunction valueOfstring(obj) {\n  return obj === null ? null : obj.toString();\n}\n\nfunction isBlank(str) {\n  return null === str || str.trim().length === 0;\n}\n\nmodule.exports = {\n  stringToByte: function stringToByte(str) {\n    var bytes = [];\n    var len = void 0,\n        c = void 0;\n    len = str.length;\n    for (var i = 0; i < len; i++) {\n      c = str.charCodeAt(i);\n      if (c >= 0x010000 && c <= 0x10FFFF) {\n        bytes.push(c >> 18 & 0x07 | 0xF0);\n        bytes.push(c >> 12 & 0x3F | 0x80);\n        bytes.push(c >> 6 & 0x3F | 0x80);\n        bytes.push(c & 0x3F | 0x80);\n      } else if (c >= 0x000800 && c <= 0x00FFFF) {\n        bytes.push(c >> 12 & 0x0F | 0xE0);\n        bytes.push(c >> 6 & 0x3F | 0x80);\n        bytes.push(c & 0x3F | 0x80);\n      } else if (c >= 0x000080 && c <= 0x0007FF) {\n        bytes.push(c >> 6 & 0x1F | 0xC0);\n        bytes.push(c & 0x3F | 0x80);\n      } else {\n        bytes.push(c & 0xFF);\n      }\n    }\n    return bytes;\n  },\n\n\n  twoDimensionalArray: function twoDimensionalArray(args, types) {\n    if (args.length === 0) {\n      return null;\n    } else if (args.length !== types.length) {\n      throw \"args number error\";\n    } else {\n      var length = args.length;\n      var two = new Array(length);\n      var arg = void 0;\n      for (var i = 0; i < length; i++) {\n        arg = args[i];\n        if (arg == null) {\n          two[i] = [];\n          continue;\n        }\n        if (typeof arg === 'string') {\n          var argStr = arg;\n          // 非String类型参数，若传参是空字符串，则赋值为空一维数组，避免数字类型转化异常 -> 空字符串转化为数字\n          if (types != null && isBlank(argStr) && 'String' !== types[i]) {\n            two[i] = [];\n          } else if (types != null && !isBlank(argStr) && types[i].indexOf('[]') >= 0) {\n            var arrayArg = eval(argStr);\n            if (Array.isArray(arrayArg)) {\n              var len = arrayArg.length;\n              var result = new Array(len);\n              for (var k = 0; k < len; k++) {\n                result[k] = valueOfstring(arrayArg[k]);\n              }\n              two[i] = result;\n            } else {\n              throw \"array arg error\";\n            }\n          } else {\n            two[i] = [argStr];\n          }\n        } else if (Array.isArray(arg)) {\n          var _len = arg.length;\n          var _result = new Array(_len);\n          for (var _k = 0; _k < _len; _k++) {\n            _result[_k] = valueOfstring(arg[_k]);\n          }\n          two[i] = _result;\n        } else {\n          two[i] = [valueOfstring(arg)];\n        }\n      }\n      return two;\n    }\n  }\n};"],"sourceRoot":""}